%define product_name $product_name
%define product_description $product_description
%define package_name $package_name
%define package_version $package_version
%define package_arch $package_arch
%define build_root $build_root
%define post_install_script_name $post_install_script_name
%define pre_uninstall_script_name $pre_uninstall_script_name
$post_install_script_args_definition
$pre_uninstall_script_args_definition
%define prefix $prefix

BuildArch: %{package_arch}
BuildRoot: %{build_root}
Source: %{package_name}-%{package_version}-%{package_arch}.tar.gz
Version: %{package_version}
Summary: %{product_name}
AutoReqProv: no
$requires_declaration

Group: Utilities
License: Commercial
Name: %{package_name}
Release: 1

%description
%{product_description}

%files
%defattr(-,root,root)
$directories
$files

%pre
# http://fedoraproject.org/wiki/Packaging:ScriptletSnippets
# runs before a new package is installed
#       install  upgrade  uninstall
# %pre  $$1 == 1 $$1 == 2 (N/A)

$script_header

# if target dir exists
if test -d %{prefix}; then
    # in case of an upgrade
    if test -n "$$1" -a "$$1" != "1"; then

        execute pushd .
        execute cd %{prefix}

        # close the running application
        if test -n "$$1" -a "$$1" != "1"; then
            execute bin/buildout -U install debug-logging close-application
            RC=$$?
            assert_rc
        fi

        # if source directory exists, we need to delete since the files of the old package
        # will be deleted only after the %post
        if test -d src; then
            echo -en "\rRemoving stale cache files, this may take a few minutes"
            execute rm -rf src
            echo -en "\r"
        fi

        # delete old eggs
        echo -en "\rRemoving temporary files, this may take a few minutes"
        execute rm -rvf eggs
        echo -en "\r"

        execute popd
    fi
fi

exit 0

%post
# http://fedoraproject.org/wiki/Packaging:ScriptletSnippets
# runs after files of the new package are in place
# the %pre sccript prepared us for upgrade already
#           install  upgrade  uninstall
#  %post    $$1 == 1 $$1 == 2 (N/A)

$script_header

# start
execute pushd .
execute cd %{prefix}

# bootstrap
echo -en "Bootstrapping, this may take a few minutes"
execute parts/python/bin/python bootstrap.py --download-base=.cache/dist --setup-source=.cache/dist/ez_setup.py
RC=$$?
echo -en "\r"
assert_rc

# buildout
echo -en "Bootstrapping, this may take a few minutes"
execute bin/buildout -U
RC=$$?
echo -en "\r"
assert_rc

# link binaries to /usr/bin
execute cd bin
for script in *; do
    if test "$$script" == "buildout"; then
        continue;
    fi
    if test -n "%{post_install_script_name}" -a "$$script" == "%{post_install_script_name}"; then
        continue;
    fi
    if test -n "%{pre_uninstall_script_name}" -a "$$script" == "%{pre_uninstall_script_name}"; then
        continue;
    fi
    echo -en "Bootstrapping, this may take a few minutes"
    execute ln -s -f %{prefix}/bin/$$script %{_bindir}/$$script
    RC=$$?
    echo -en "\r"
    assert_rc
done
cd ..

# execute application's post-install script
if test -n "%{post_install_script_name}" -a -x "bin/%{post_install_script_name}"; then
    execute bin/%{post_install_script_name} %{post_install_script_args}
    RC=$$?
    assert_rc
fi

#end
execute popd
exit 0


%preun
# http://fedoraproject.org/wiki/Packaging:ScriptletSnippets
# runs before old package is removed
#         install upgrade  uninstall
# %preun  (N/A)   $$1 == 1 $$1 == 0

$script_header

# start
execute pushd .
execute cd %{prefix}

# detect upgrade, we need to run this script only on uninstall
if test -n "$$1" -a "$$1" != "0"; then
    exit 0
fi

# execute application's pre-uninstall script
if test -n "%{pre_uninstall_script_name}" -a -x "bin/%{pre_uninstall_script_name}"; then
    execute bin/%{pre_uninstall_script_name} %{pre_uninstall_script_args}
    RC=$$?
    assert_rc
fi

# close application
execute bin/buildout -U install debug-logging close-application
RC=$$?
assert_rc

# remove links to binaries from /usr/bin
execute cd bin
for script in *; do
    if test -n "$$script" -a -L %{_bindir}/$$script -a "`readlink %{_bindir}/$$script`" == "%{prefix}/bin/$$script"; then
        execute rm -f %{_bindir}/$$script
        RC=$$?
        assert_rc
    fi
done
cd ..

# clean installed directories
# this also deletes installed files
for dirname in $directories_to_clean; do
    execute find $$dirname -maxdepth 1 -mindepth 1 -delete
done

# end
execute popd
exit 0

%postun
# http://fedoraproject.org/wiki/Packaging:ScriptletSnippets
# runs after old package is removed
#           install upgrade  uninstall
# %postun   (N/A)   $$1 == 1 $$1 == 0

if test -n "$$1" -a "$$1" != "0"; then
    exit 0
fi

set +e
rmdir -v %{prefix}
set -e

exit 0
